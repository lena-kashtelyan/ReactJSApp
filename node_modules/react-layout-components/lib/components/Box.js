'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _static = require('inline-style-prefixer/static');

var _static2 = _interopRequireDefault(_static);

var _omit = require('../utils/omit');

var _omit2 = _interopRequireDefault(_omit);

var _props = require('../utils/props');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Flexbox Component
 */
var Box = function Box(props) {
  var styles = {};

  // shortcut props
  if (props.fit) {
    styles.width = '100%';
    styles.height = '100%';
  }

  if (props.center) {
    styles.justifyContent = 'center';
    styles.alignItems = 'center';
  }

  // resolving inline-flex display style
  if (props.inline) {
    styles.display = 'inline-' + styles.display;
  }

  // resolving the flow properties flex-wrap and flex-direction
  if (props.wrap) {
    styles.flexWrap = 'wrap';
    if (props.wrap === 'reverse') {
      styles.flexWrap += '-reverse';
    }
  }

  if (props.column) {
    styles.flexDirection = 'column';
    if (props.reverse) {
      styles.flexDirection += '-reverse';
    }
  } else {
    if (props.reverse) {
      styles.flexDirection = 'row-reverse';
    }
  }

  // resolving all box properties
  _props.boxProps.forEach(function (prop) {
    if (props.hasOwnProperty(prop)) {
      styles[prop] = props[prop];
    }
  });

  // resolving flex properties and its shortcut
  _props.flexProps.forEach(function (prop) {
    if (props.hasOwnProperty(prop)) {
      styles[prop] = props[prop];
    }
  });

  // processing styles and normalizing flexbox specifications
  var prefixedStyles = (0, _static2.default)(styles);
  var className = (props.className || '') + ' react-layout-components--box';
  var childProps = (0, _omit2.default)(props, _props.layoutProps);

  return _react2.default.createElement(
    'div',
    _extends({}, childProps, { className: className, style: _extends({}, prefixedStyles, props.style) }),
    props.children
  );
};

exports.default = Box;
module.exports = exports['default'];